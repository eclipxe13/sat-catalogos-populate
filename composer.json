{
    "name": "phpcfdi/sat-catalogos-populate",
    "description": "Herramienta para crear y actualizar los catÃ¡logos de SAT/CFDI en una base de datos SQLite3",
    "license": "MIT",
    "keywords": [
        "sat",
        "cfdi",
        "catalogos"
    ],
    "authors": [
        {
            "name": "Carlos C Soto",
            "email": "eclipxe13@gmail.com"
        }
    ],
    "homepage": "https://github.com/phpcfdi/sat-catalogos-populate",
    "support": {
        "issues": "https://github.com/phpcfdi/sat-catalogos-populate/issues",
        "source": "https://github.com/phpcfdi/sat-catalogos-populate"
    },
    "require": {
        "php": ">=8.2",
        "ext-dom": "*",
        "ext-json": "*",
        "ext-pdo": "*",
        "ext-simplexml": "*",
        "ext-sqlite3": "*",
        "guzzlehttp/guzzle": "^7.0",
        "psr/http-message": "^1.0",
        "psr/log": "^1.0",
        "symfony/dom-crawler": "^5.2"
    },
    "require-dev": {
        "ext-fileinfo": "*",
        "phpunit/phpunit": "^10.5.5"
    },
    "autoload": {
        "psr-4": {
            "PhpCfdi\\SatCatalogosPopulate\\": "src/"
        },
        "files": [
            "src/Utils/functions.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "PhpCfdi\\SatCatalogosPopulate\\Tests\\": "tests/"
        }
    },
    "scripts": {
        "dev:build": [
            "@dev:fix-style",
            "@dev:test"
        ],
        "dev:check-style": [
            "@php tools/composer-normalize normalize --dry-run",
            "@php tools/php-cs-fixer fix --dry-run --verbose",
            "@php tools/phpcs --colors -sp"
        ],
        "dev:coverage": [
            "@php -dzend_extension=xdebug.so -dxdebug.mode=coverage vendor/bin/phpunit --testdox --coverage-html build/coverage/html/"
        ],
        "dev:fix-style": [
            "@php tools/composer-normalize normalize",
            "@php tools/php-cs-fixer fix --verbose",
            "@php tools/phpcbf --colors -sp"
        ],
        "dev:test": [
            "@dev:check-style",
            "@php vendor/bin/phpunit --testdox --stop-on-failure",
            "@php tools/phpstan analyse --no-progress --no-interaction"
        ]
    },
    "scripts-descriptions": {
        "dev:build": "DEV: run dev:fix-style and dev:tests, run before pull request",
        "dev:check-style": "DEV: search for code style errors using composer-normalize, php-cs-fixer and phpcs",
        "dev:coverage": "DEV: run phpunit with xdebug and storage coverage in build/coverage/html/",
        "dev:fix-style": "DEV: fix code style errors using composer-normalize, php-cs-fixer and phpcbf",
        "dev:test": "DEV: run dev:check-style, phpunit and phpstan"
    }
}
